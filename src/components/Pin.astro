---
import { API_BASE_URL } from '../constants'
import { Link } from './UI'
import Image from 'astro/components/Image.astro'
import type { IPin } from '../interfaces/IPin'
import type { ILike } from '../interfaces/ILike'

interface Props {
    pin   : IPin
    likes : any
    target: string
}
const { pin, likes, target } = Astro.props

const saved = likes?.some((like: ILike) => {
  return like.photoId.toString() === pin.id.toString();
})
---
<div class="m-2">
    <div class="relative cursor-none w-auto rounded-lg overflow-hidden transition-all duration-500 ease-in-out Photo" id="Photo">
        <Image width={pin?.width} height={pin?.height} class="h-full w-96 md:h-auto md:w-full rounded-lg" loading="lazy" src={pin.src.original ? pin.src.original : pin.src.medium}  alt={pin.alt} 
        />
        <div class="hidden absolute top-0 w-full h-full flex-col justify-between p-1 pr-2 pt-2 pb-2 z-50 hover:bg-blackOverlay menu transition-all duration-500 ease-in-out" id="menu">
            <div class="flex items-center justify-between">
                <div class="flex gap-2">
                    <a id="download" href={pin.src.original ? pin.src.original : pin.src.medium} download="image.jpg"
                    class="bg-white w-9 h-9 rounded-full flex items-center justify-center text-dark text-xl opacity-75 hover:opacity-100 hover:shadow-md outline-none"
                    onclick="downloadImage(event)"
                    >
                    <i class="fa fa-arrow-circle-down" aria-hidden="true"></i>
                    </a>
                </div>
                {
                    !saved && (
                    <div>
                        <form action={`${API_BASE_URL}/likes/like.json`}  method="post">
                            <input type="text" name="photoUrl" id="photoUrl" class="sr-only" value={pin.src.original ? pin.src.original : pin.src.medium}/>                           
                            <input type="text" name="photoId" id="photoId" class="sr-only" value={pin?.id ? pin?.id : '00000000'} />                           
                            <button type="submit" class={`bg-rose-500 opacity-70 hover:opacity-100 text-white  p-2 font-bold rounded-full flex items-center justify-center hover:shadow-md outline-none`} id="like">
                                <i class="fa fa-heart" aria-hidden="true"></i>
                                <div id="likeLoader" class="hidden animate-spin  size-3 ml-3 border-[3px] border-current border-t-transparent text-white rounded-full transition-all duration-500 ease-in-out" role="status" aria-label="loading">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </button>
                        </form>
                    </div>
                    )
                }
            </div>
            <div class="flex justify-between items-start gap-2 w-full">
                <a href={`/details/${pin?.id}`} target="_blank" class="bg-white flex items-center gap-2 text-black font-bold p-1 pl-4 pr-4 rounded-full opacity-70 hover:opacity-100 hover:shadow-md mb-2">
                    <i class="bi bi-arrow-up-right-circle-fill"></i>
                    {`view details...`}
                </a>
                {
                    saved && (
                        <div>
                            <button type="submit" class={`${ saved  ? "bg-red-500" : "bg-red-500"} p-1 opacity-70 hover:opacity-100 text-white px-2 py-1 font-bold rounded-full flex items-center justify-center hover:shadow-md outline-none mb-2 transition-all duration-500 ease-in-out`} data-id={likes?.find((like: ILike) => like.photoId === pin.id.toString())?._id} aria-label="Delete like">
                                <i class="bi bi-trash2-fill"></i>

                                <div id="dealeteLoader" class="hidden animate-spin  size-3 ml-3 border-[3px] border-current border-t-transparent text-white rounded-full transition-all duration-500 ease-in-out" role="status" aria-label="loading">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </button>
                        </div>
                    )
                }
            </div>
          </div>
    </div>
</div>
    <Link to={pin?.photographer_url} className="flex gap-2 mb-2 items-center" target={target}>
        <i class="bi bi-person-circle icon"></i> 
        <p class="font-bold capitalize mb-1">
            {pin?.photographer}
        </p>
    </Link>
</div>
 <style>
	.icon{
		font-size:18px;
	}
</style>
<script>
document.querySelectorAll('.Photo').forEach(photo => {
    const menu = photo.querySelector(".menu");
    photo.addEventListener("mouseover", () => {
        menu?.classList.add('flex');
        menu?.classList.remove('hidden');
    });

    photo.addEventListener('mouseout', () => {
        menu?.classList.add("hidden");
    });

});


const deleteBtns = document.querySelectorAll('[data-id') as NodeListOf<HTMLButtonElement>;

deleteBtns.forEach(btn => btn.addEventListener('click', async (e)=> {
    document.getElementById('dealeteLoader')?.classList?.remove('hidden')
    const id = btn.dataset.id
    const res = await fetch(`/api/likes/${id}.json`, {
        method: 'DELETE'
    })
    const { message } = await res.json();
    console.log(message);
    location.reload();
}))

const likeBtns = document.querySelectorAll("#like") as NodeListOf<HTMLButtonElement>;

likeBtns.forEach(btn => btn.addEventListener("click", () => {
    document.getElementById('likeLoader')?.classList?.remove('hidden')
}))

// function downloadImage(event: any) {
//     event.preventDefault(); // Prevent the default behavior of the anchor tag
    
//     const imageUrl = event.target.getAttribute('href'); // Get the image URL from the href attribute
    
//     fetch(imageUrl)
//         .then(response => response.blob())
//         .then(blob => {
//             const url = window.URL.createObjectURL(blob);
//             const a = document.createElement('a');
//             a.style.display = 'none';
//             a.href = url;
//             a.download = 'image.jpg'; // Set the filename for the downloaded image
//             document.body.appendChild(a);
//             a.click();
//             window.URL.revokeObjectURL(url);
//         });
// }
</script>