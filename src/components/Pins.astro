---
import TopBar from './TopBar.astro'
import Pin from '../components/Pin.astro'
import Loader from '../components/Loader.astro'

let loading: boolean = true
interface Props {
    pins        : any,
    loadingText?: string
    show        : boolean
}
const { pins, loadingText, show } = Astro.props
---
<div class="px-2 md:px-5">
    <div class="bg-gray-50">
        {
            show && (
                <TopBar />
            )
        }
    </div>

    {
        loading && <Loader text={loadingText} />
    }

    <div class="w-[350px] max-sm:flex max-sm:flex-col justify-center columns-1 md:columns-3 lg:columns-3 xl:columns-4 gap-3 md:w-[600px] lg:w-[1100px] xl:w-[1300px] space-y-3 pb-28 p-3 lg:px-8 lg:py-16 mx-auto mt-15 animate-slide-fwd"
    >
        {
            pins?.map((pin: any) => <Pin pin={pin} />)
        }
    </div>
    <!-- Pagination -->
<nav class="flex items-center gap-x-1">
    <button type="button" class="min-h-[38px] min-w-[38px] py-2 px-2.5 inline-flex justify-center items-center gap-x-2 text-sm rounded-lg border border-transparent text-gray-800 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none ">
      <svg class="flex-shrink-0 size-3.5" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m15 18-6-6 6-6"/></svg>
      <span aria-hidden="true" class="sr-only">Previous</span>
    </button>
    <div class="flex items-center gap-x-1">
      <button type="button" class="min-h-[38px] min-w-[38px] flex justify-center items-center border border-gray-200 text-gray-800 py-2 px-3 text-sm rounded-lg focus:outline-none focus:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none" aria-current="page">1</button>
      <button type="button" class="min-h-[38px] min-w-[38px] flex justify-center items-center border border-transparent text-gray-800 hover:bg-gray-100 py-2 px-3 text-sm rounded-lg focus:outline-none focus:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none">2</button>
      <button type="button" class="min-h-[38px] min-w-[38px] flex justify-center items-center border border-transparent text-gray-800 hover:bg-gray-100 py-2 px-3 text-sm rounded-lg focus:outline-none focus:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none">3</button>
    </div>
    <button type="button" class="min-h-[38px] min-w-[38px] py-2 px-2.5 inline-flex justify-center items-center gap-x-2 text-sm rounded-lg border border-transparent text-gray-800 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none ">
      <span aria-hidden="true" class="sr-only">Next</span>
      <svg class="flex-shrink-0 size-3.5" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m9 18 6-6-6-6"/></svg>
    </button>
  </nav>
  <!-- End Pagination -->
</div>
<script>
	const loaderId = "loader"
	function hideLoader(loaderId: string) {
		setTimeout(function() {
            document.addEventListener("DOMContentLoaded", function() {
            // Code to update and hide the element goes here
            var element = document.getElementById("loader");
            if(element) element.style.display = "none"; // Hide the element
            });
		}, 5000)
	};
	
	hideLoader(loaderId);
</script>