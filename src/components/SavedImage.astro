---
import Image from "astro/components/Image.astro";
import Link from '../components/UI/Link.astro'
import type { ILike } from "../interfaces/ILike";

interface Props {
    like: ILike;
}

const downloadImage = (e: any) => {
  e.preventDefault(); // Prevent the default behavior of the anchor tag
    
    const imageUrl = e.target.getAttribute('href'); // Get the image URL from the href attribute
    
    fetch(imageUrl)
        .then(response => response.blob())
        .then(blob => {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            a.download = 'image.jpg'; // Set the filename for the downloaded image
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
        });
}

const { like } = Astro.props
---

<div class="m-2">
    <div class="relative cursor-none w-auto rounded-lg overflow-hidden transition-all duration-500 ease-in-out Photo hover:shadow-sm" id="Photo"
    >
        <Image width={'350'} height={'350'} src={like.photoUrl} alt="img" class="rounded-md" /> 
        
        <div class="hidden absolute top-0 w-[350px] rounded-md  h-full flex flex-col justify-between p-1 pr-2 pt-2 pb-2 z-50 hover:bg-blackOverlay menu" id="menu">
            <div class="flex items-center justify-between">
                <div class="flex gap-2">
                    <a id="download" href={like.photoUrl} download="image.jpg" download
                    class="bg-white w-9 h-9 rounded-full flex items-center justify-center text-dark text-xl opacity-75 hover:opacity-100 hover:shadow-md outline-none"
                    onclick="downloadImage()"
                    >
                        <i class="fa fa-arrow-circle-down" aria-hidden="true"></i>
                    </a>
                </div>
                <div class="hidden">
                    <form action="/">                           
                        <button type="submit" class={`${"bg-green-500"} opacity-70 hover:opacity-100 text-white px-3 py-1 font-bold rounded-full flex items-center justify-center hover:shadow-md outline-none`}>
                            Saved
                        </button>
                    </form>
                </div>
            </div>
            <div class="flex justify-between items-start gap-2 w-full">
                <Link to={`/details/${like.photoId}`} className="flex gap-2 mb-2 bg-white items-center text-black font-bold p-1 pl-4 pr-4 rounded-full opacity-70 hover:opacity-100 hover:shadow-md " target="_blank">
                    <i class="bi bi-arrow-up-right-circle-fill"></i>
                    {`view details...`}
                </Link>
                <div>
                    <button type="submit" class={`bg-red-500 p-1 opacity-70 hover:opacity-100 text-white px-2 py-1 font-bold rounded-full flex items-center justify-center hover:shadow-md outline-none mb-2 transition-all duration-500 ease-in-out`} data-id={like._id} aria-label="Delete like">
                        <i class="bi bi-trash2-fill"></i>

                        <div id="dealeteLoader" class="hidden animate-spin  size-3 ml-3 border-[3px] border-current border-t-transparent text-white rounded-full transition-all duration-500 ease-in-out" role="status" aria-label="loading"
                        >
                            <span class="sr-only">Loading...</span>
                        </div>
                    </button>
                </div>
            </div>
          </div>
    </div>
 </div>
 <script>
    const deleteBts = document.querySelectorAll('[data-id') as NodeListOf<HTMLButtonElement>;

    deleteBts.forEach(btn => btn.addEventListener('click', async (e)=> {
        document.getElementById('dealeteLoader')?.classList?.remove('hidden')
        const id = btn.dataset.id
        const res = await fetch(`/api/likes/${id}.json`, {
            method: 'DELETE'
        })
        const { message } = await res.json();
        console.log(message);
        location.reload();
    }))

 </script>